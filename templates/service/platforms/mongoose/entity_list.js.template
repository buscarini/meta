var fs = require('fs');
var mongoose = require('mongoose');
var moment = require('moment');

var schema = require('./{{content.model.entityName}}Schema');
schema.schema.set('autoIndex', false);

{{#content.model.relationships}}
var {{name}}Schema = require('./{{entityName}}Schema');
{{name}}Schema.schema.set('autoIndex', false);
{{/content.model.relationships}}

module.exports.findOne = function(req, res,callback) {
	res.setHeader('Content-Type', 'application/json');

	var {{content.model.entityName}} = mongoose.model('{{content.model.entityName}}', schema.schema)
	{{#content.model.relationships}}
	var {{entityName}} = mongoose.model('{{entityName}}', {{name}}Schema.schema);
	{{/content.model.relationships}}

	{{content.model.entityName}}.find({
		{{#content.model.primaryKeys}}
		{{name}} : req.{{name}}{{^_last_}},{{/_last_}}{{#_last_}}{{#content.model._has_filters_}},{{/content.model._has_filters_}}{{/_last_}}
		{{/content.model.primaryKeys}}
		{{#content.model.filters}}
		{{property}} : { ${{relation}}: {{value}} }{{^_last_}},{{/_last_}}
		{{/content.model.filters}}
	},function (err, items) {
		if (err) {
			res.send({"{{resultValue.key}}": {{{resultValue.errorValue}}}, "{{errorMessage.key}}":err.message});
		}
		else {
			
			var contentObject = { "{{resultValue.key}}" :{{{resultValue.okValue}}} }
			contentObject.{{content.key}} = new Array()
			items.forEach(function(item) {
				{{> fillServiceItem}}
			})
			
			res.send(contentObject)
					
			if (callback) callback()
		}
	})
};

module.exports.findAll = function(req, res,callback) {
	res.setHeader('Content-Type', 'application/json');

	var {{content.model.entityName}} = mongoose.model('{{content.model.entityName}}', schema.schema)
	{{#content.model.relationships}}
	var {{entityName}} = mongoose.model('{{entityName}}', {{name}}Schema.schema);
	{{/content.model.relationships}}

	{{content.model.entityName}}.find({
		{{#content.model.filters}}
		{{property}} : { ${{relation}}: {{value}} }{{^_last_}},{{/_last_}}
		{{/content.model.filters}}
	})
	.sort({ {{#content.model.sortBy}} {{property}} : {{ascending}}{{^_last_}},{{/_last_}} {{/content.model.sortBy}} })
	.populate({{#content.model.relationships}}'{{name}}'{{^_last_}},{{/_last_}}{{/content.model.relationships}})
	.exec(function (err, items) {
		if (err) {
			res.send({"{{resultValue.key}}": {{{resultValue.errorValue}}}, "{{errorMessage.key}}":err.errmsg});
		}
		else {
			
			var contentObject = { "{{resultValue.key}}" :{{{resultValue.okValue}}} }
			contentObject.{{content.key}} = new Array()
			items.forEach(function(item) {
				{{> fillServiceItem}}
			})
			
			res.send(contentObject)
					
			if (callback) callback()
		}
	})
};
