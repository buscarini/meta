var fs = require('fs');
var mongoose = require('mongoose');
var moment = require('moment');

{{#content}}
var {{model.entityName}}Schema = require('./{{model.entityName}}Schema');
{{model.entityName}}Schema.schema.set('autoIndex', false);
{{#model.relationships}}
var {{name}}Schema = require('./{{entityName}}Schema');
{{name}}Schema.schema.set('autoIndex', false);
{{/model.relationships}}

{{/content}}

{{#content}}
module.exports.findOne{{model.entityName}} = function(req, res,callback) {
	res.setHeader('Content-Type', 'application/json');

	var {{model.entityName}} = mongoose.model('{{model.entityName}}', {{model.entityName}}Schema.schema)
	{{#model.relationships}}
	var {{entityName}} = mongoose.model('{{entityName}}', {{name}}Schema.schema);
	{{/model.relationships}}

	{{model.entityName}}.find({
		{{#model.primaryKeys}}
		{{name}} : req.{{name}}{{^_last_}},{{/_last_}}{{#_last_}}{{#model._has_filters_}},{{/model._has_filters_}}{{/_last_}}
		{{/model.primaryKeys}}
		{{#model.filters}}
		{{property}} : { ${{relation}}: {{value}} }{{^_last_}},{{/_last_}}
		{{/model.filters}}
	})
	.populate('{{#model.relationships}}{{name}}{{^_last_}} {{/_last_}}{{/model.relationships}}')
	.exec(function (err, items) {
		if (err) {
			res.send({"{{resultValue.key}}": {{{resultValue.errorValue}}}, "{{errorMessage.key}}":err.message});
		}
		else {
			contentObject = { "{{resultValue.key}}" :{{{resultValue.okValue}}} };
			contentObject.{{key}} = new Array();
			
			var sendResponse = function(err) {
				res.send(contentObject);
					
				if (callback) callback();
			};
			
			var numOps = items.length;
			var finished = function(error) {
				numOps--;
				if (numOps==0) {
					sendResponse(err);
				}
			};
			
			items.forEach(function(item) {
				{{> fillServiceItem}}
			})
		}
	})
};
{{/content}}

module.exports.findAll = function(req, res,callback) {
	res.setHeader('Content-Type', 'application/json');
	
	var numFinds = 0;
	var contentObject = {};
		
	var foundFunction = function(err) {
		if (err) {
			res.send({"{{resultValue.key}}": {{{resultValue.errorValue}}}, "{{errorMessage.key}}":err.message});
		}
		else {
			numFinds--;
			if (numFinds>0) return;
			
			contentObject.{{resultValue.key}} = {{{resultValue.okValue}}};
			
			res.send(contentObject);
					
			if (callback) callback();
		}
	};
	
	{{#content}}
	numFinds++;
	
	var {{model.entityName}} = mongoose.model('{{model.entityName}}', {{model.entityName}}Schema.schema)
	{{#model.relationships}}
	var {{entityName}} = mongoose.model('{{entityName}}', {{name}}Schema.schema);
	{{/model.relationships}}

	{{model.entityName}}.find({
		{{#model.filters}}
		{{property}} : { ${{relation}}: {{value}} }{{^_last_}},{{/_last_}}
		{{/model.filters}}
	})
	.sort({ {{#model.sortBy}} {{property}} : {{ascending}}{{^_last_}},{{/_last_}} {{/model.sortBy}} })
	// .populate('{{#model.relationships}}{{name}}{{^_last_}} {{/_last_}}{{/model.relationships}}')
	.exec(function (err, items) {
		if (!err) {
			contentObject.{{key}} = new Array();
			var numOps = items.length;
			var finished = function(error) {
				numOps--;
				if (numOps==0) {
					foundFunction(err);
				}
			};
			
			{{#model}}
			items.forEach(function(unpopulated) {
				var populated = {}
				{{> fillModel}}
				content.{{key}}.push(populated);
			})
			{{/model}}
		}
	})
	
	{{/content}}
};
