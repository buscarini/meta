var serviceItem = {}

{{#model.properties}}
{{^type_date}}
serviceItem.{{destination}} = item.{{name}}
{{/type_date}}
{{#type_date}}
serviceItem.{{destination}} = moment(item.{{name}}).format("{{format}}")
{{/type_date}}
{{/model.properties}}

{{#model.relationships}}
{{#_toMany_}}
var populated = item.{{name}};
var related = [];

var fillRelated = function(populated,related,serviceItem) {
	if (populated instanceof Array) {
	for (var index=0;index<populated.length;index++) {
		var populatedObj = populated[index];
		var relatedObj = {};
	}

	{{#properties}}
		relatedObj.{{destination}} = populatedObj.{{name}};
	{{/properties}}

		related.push(relatedObj);
	}

	serviceItem.{{name}} = related;
	contentObject.{{key}}.push(serviceItem);
	finished(null);
};

if (populated.length==0) {
	{{entityName}}.find({ {{inverse}}: item.{{#model.primaryKeys}}{{name}}{{/model.primaryKeys}} }).exec(function (err, items) {
		if (err) {
			res.send({"result": "1", "errorMessage":err.message});
		}
		else {
			populated = items;
		}
		
		fillRelated(populated,related,serviceItem);
	});
}
else {
	fillRelated(populated,related,serviceItem);
}
{{/_toMany_}}
{{^_toMany_}}
var populated = item.{{name}};
var related = {};
{{#properties}}
related.{{destination}} = populated.{{name}};
{{/properties}}
serviceItem.{{name}} = related;
contentObject.{{key}}.push(serviceItem);
finished(null);
{{/_toMany_}}
{{/model.relationships}}


